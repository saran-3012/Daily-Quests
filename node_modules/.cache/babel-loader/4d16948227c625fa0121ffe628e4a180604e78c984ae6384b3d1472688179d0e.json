{"ast":null,"code":"import React from'react';import{useAllContext}from'../../App';import'../../Styles/AllTasks.css';import Task from'./Task';import{jsx as _jsx}from\"react/jsx-runtime\";const AllTasks=()=>{const StatesAndFunctions=useAllContext();const allTaskDetails=StatesAndFunctions.displayedTasks;const handleTaskOperations=(e,popupWindow,currentTaskDetails)=>{e.stopPropagation();StatesAndFunctions.changePopupMessageBox(popupWindow,currentTaskDetails);};return/*#__PURE__*/_jsx(\"div\",{className:\"alltasks_container\",children:allTaskDetails.length?allTaskDetails.map(taskDtls=>/*#__PURE__*/_jsx(Task,{taskDetails:taskDtls,handleTaskOperations:handleTaskOperations})):/*#__PURE__*/_jsx(\"p\",{className:\"notask_displayed_text\",children:StatesAndFunctions.activeNavlink===\"All\"?\"No tasks assigned currently\":StatesAndFunctions.activeNavlink===\"In progress\"?\"No tasks in progress\":StatesAndFunctions.activeNavlink===\"Completed\"?\"No completed tasks yet\":StatesAndFunctions.activeNavlink===\"Overdue\"?\"You're all caught up! No tasks are overdue\":\"\"})});};export default AllTasks;","map":{"version":3,"names":["React","useAllContext","Task","jsx","_jsx","AllTasks","StatesAndFunctions","allTaskDetails","displayedTasks","handleTaskOperations","e","popupWindow","currentTaskDetails","stopPropagation","changePopupMessageBox","className","children","length","map","taskDtls","taskDetails","activeNavlink"],"sources":["C:/My Projects/todo-list-app/src/Components/TaskComponents/AllTasks.jsx"],"sourcesContent":["import React from 'react';\r\nimport {useAllContext} from '../../App';\r\nimport '../../Styles/AllTasks.css';\r\nimport Task from './Task';\r\n\r\nconst AllTasks = () => {\r\n  const StatesAndFunctions = useAllContext();\r\n  const allTaskDetails = StatesAndFunctions.displayedTasks;\r\n\r\n  const handleTaskOperations = (e, popupWindow, currentTaskDetails) => {\r\n    e.stopPropagation();\r\n    StatesAndFunctions.changePopupMessageBox(popupWindow, currentTaskDetails);\r\n  };\r\n\r\n  return (\r\n    <div className='alltasks_container'>\r\n      {allTaskDetails.length?\r\n        allTaskDetails.map((taskDtls) => (\r\n          <Task taskDetails={taskDtls} handleTaskOperations={handleTaskOperations}/>\r\n        )):\r\n        <p className='notask_displayed_text'>\r\n          {\r\n            (StatesAndFunctions.activeNavlink===\"All\")?\r\n            \"No tasks assigned currently\":\r\n            (StatesAndFunctions.activeNavlink===\"In progress\")?\r\n            \"No tasks in progress\":\r\n            (StatesAndFunctions.activeNavlink===\"Completed\")?\r\n            \"No completed tasks yet\":\r\n            (StatesAndFunctions.activeNavlink===\"Overdue\")?\r\n            \"You're all caught up! No tasks are overdue\":\r\n            \"\"\r\n          }\r\n        </p>\r\n      }\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default AllTasks;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAAQC,aAAa,KAAO,WAAW,CACvC,MAAO,2BAA2B,CAClC,MAAO,CAAAC,IAAI,KAAM,QAAQ,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE1B,KAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CACrB,KAAM,CAAAC,kBAAkB,CAAGL,aAAa,CAAC,CAAC,CAC1C,KAAM,CAAAM,cAAc,CAAGD,kBAAkB,CAACE,cAAc,CAExD,KAAM,CAAAC,oBAAoB,CAAGA,CAACC,CAAC,CAAEC,WAAW,CAAEC,kBAAkB,GAAK,CACnEF,CAAC,CAACG,eAAe,CAAC,CAAC,CACnBP,kBAAkB,CAACQ,qBAAqB,CAACH,WAAW,CAAEC,kBAAkB,CAAC,CAC3E,CAAC,CAED,mBACER,IAAA,QAAKW,SAAS,CAAC,oBAAoB,CAAAC,QAAA,CAChCT,cAAc,CAACU,MAAM,CACpBV,cAAc,CAACW,GAAG,CAAEC,QAAQ,eAC1Bf,IAAA,CAACF,IAAI,EAACkB,WAAW,CAAED,QAAS,CAACV,oBAAoB,CAAEA,oBAAqB,CAAC,CAC1E,CAAC,cACFL,IAAA,MAAGW,SAAS,CAAC,uBAAuB,CAAAC,QAAA,CAE/BV,kBAAkB,CAACe,aAAa,GAAG,KAAK,CACzC,6BAA6B,CAC5Bf,kBAAkB,CAACe,aAAa,GAAG,aAAa,CACjD,sBAAsB,CACrBf,kBAAkB,CAACe,aAAa,GAAG,WAAW,CAC/C,wBAAwB,CACvBf,kBAAkB,CAACe,aAAa,GAAG,SAAS,CAC7C,4CAA4C,CAC5C,EAAE,CAEH,CAAC,CAEH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAhB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}