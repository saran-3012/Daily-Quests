{"ast":null,"code":"var _jsxFileName = \"C:\\\\My Projects\\\\todo-list-app\\\\src\\\\Components\\\\TaskComponents\\\\TaskButton.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../../Styles/Utility.css';\nimport '../../Styles/TaskButton.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskButton = props => {\n  _s();\n  const StatesAndFunctions = useAllContext();\n  const changeDropdown = btnName => {\n    props.setCurrentActiveButton(props.activeTaskButton === btnName ? '' : btnName);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task_dropdown\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"task_dropdown_button btn\",\n      onClick: () => changeDropdown(props.buttonName),\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"btn_svg\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        fill: \"none\",\n        viewBox: \"0 0 24 24\",\n        \"stroke-width\": \"1.5\",\n        stroke: \"currentColor\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          \"stroke-linecap\": \"round\",\n          \"stroke-linejoin\": \"round\",\n          d: props.pathD\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"task_button_text\",\n        children: props.buttonName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), props.activeTaskButton === props.buttonName && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown_content\",\n      children: props.buttonContents.map(opt => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task_dropdown_option\",\n        children: opt\n      }, opt, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskButton, \"9JAyxaoSfgDdnOJHwbztVAEvxtk=\", true);\n_c = TaskButton;\nexport default TaskButton;\nvar _c;\n$RefreshReg$(_c, \"TaskButton\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TaskButton","props","_s","StatesAndFunctions","useAllContext","changeDropdown","btnName","setCurrentActiveButton","activeTaskButton","className","children","onClick","buttonName","xmlns","fill","viewBox","stroke","d","pathD","fileName","_jsxFileName","lineNumber","columnNumber","buttonContents","map","opt","_c","$RefreshReg$"],"sources":["C:/My Projects/todo-list-app/src/Components/TaskComponents/TaskButton.jsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport '../../Styles/Utility.css';\r\nimport '../../Styles/TaskButton.css';\r\n\r\nconst TaskButton = (props) => {\r\n  const StatesAndFunctions = useAllContext();\r\n\r\n  const changeDropdown = (btnName) => {\r\n    props.setCurrentActiveButton((props.activeTaskButton===btnName)?'':btnName);\r\n  };\r\n\r\n  return (\r\n    <div className='task_dropdown'>\r\n      <button className='task_dropdown_button btn' onClick={() => changeDropdown(props.buttonName)}>\r\n        <svg className='btn_svg' xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\">\r\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d={props.pathD} />\r\n        </svg>\r\n        <p className='task_button_text'>{props.buttonName}</p>\r\n      </button>\r\n      {\r\n        (props.activeTaskButton===props.buttonName) &&\r\n        (<div className=\"dropdown_content\">\r\n          {\r\n            props.buttonContents.map((opt) => (\r\n              <div key={opt} className=\"task_dropdown_option\" >\r\n                {opt}\r\n              </div>\r\n            ))\r\n          }\r\n        </div>)\r\n      }\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default TaskButton;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAO,0BAA0B;AACjC,OAAO,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC5B,MAAMC,kBAAkB,GAAGC,aAAa,CAAC,CAAC;EAE1C,MAAMC,cAAc,GAAIC,OAAO,IAAK;IAClCL,KAAK,CAACM,sBAAsB,CAAEN,KAAK,CAACO,gBAAgB,KAAGF,OAAO,GAAE,EAAE,GAACA,OAAO,CAAC;EAC7E,CAAC;EAED,oBACEP,OAAA;IAAKU,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BX,OAAA;MAAQU,SAAS,EAAC,0BAA0B;MAACE,OAAO,EAAEA,CAAA,KAAMN,cAAc,CAACJ,KAAK,CAACW,UAAU,CAAE;MAAAF,QAAA,gBAC3FX,OAAA;QAAKU,SAAS,EAAC,SAAS;QAACI,KAAK,EAAC,4BAA4B;QAACC,IAAI,EAAC,MAAM;QAACC,OAAO,EAAC,WAAW;QAAC,gBAAa,KAAK;QAACC,MAAM,EAAC,cAAc;QAAAN,QAAA,eAClIX,OAAA;UAAM,kBAAe,OAAO;UAAC,mBAAgB,OAAO;UAACkB,CAAC,EAAEhB,KAAK,CAACiB;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpE,CAAC,eACNvB,OAAA;QAAGU,SAAS,EAAC,kBAAkB;QAAAC,QAAA,EAAET,KAAK,CAACW;MAAU;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,EAENrB,KAAK,CAACO,gBAAgB,KAAGP,KAAK,CAACW,UAAU,iBACzCb,OAAA;MAAKU,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAE9BT,KAAK,CAACsB,cAAc,CAACC,GAAG,CAAEC,GAAG,iBAC3B1B,OAAA;QAAeU,SAAS,EAAC,sBAAsB;QAAAC,QAAA,EAC5Ce;MAAG,GADIA,GAAG;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAER,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAED,CAAE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEN,CAAC;AAEV,CAAC;AAACpB,EAAA,CA7BIF,UAAU;AAAA0B,EAAA,GAAV1B,UAAU;AA+BhB,eAAeA,UAAU;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}